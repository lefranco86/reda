entity Student {
	registrationNumber String required minlength(7) maxlength(7)
	firstname String required
    lastname String required
    email String required
    active Boolean required
}
entity ContactInformation {
	street String required
    civicNumber Integer required
    city String required
    postalCode String required
    apartment String
    phoneNumber Integer required
    phonePost Integer
    faxNumber Integer
    faxPost Integer
}
entity Country {
	name String required
}
entity Province {
	name String required
}
entity Entreprise {
	name String required
}
entity Employee {
	lastname String required
    firstname String required
    job String required
    email String required
}
entity Teacher {
	registrationNumber String required minlength(7) maxlength(7)
    lastname String required
    firstname String required
    email String required
}
entity Cohort {
	startDate LocalDate required
}
entity Offer {
	weeklyHour Integer
    hourlyRate Float
    description String required
}
entity StudentOffer {
	status Integer /* Qu'est-ce que c'est? Pourquoi Integer? */
}
entity Interview {
	date LocalDate required
    result String /* Qu'est-ce que c'est? */
}
entity Internship {
	hourlyRate Integer
    weeklyHour Integer
    specialRate Integer
    start LocalDate required
    end LocalDate required
}
entity Document {
	target AnyBlob required
    name String required
}
entity DocumentType {
	description String required
}
entity Technology {
	name String required
    description String required
}
entity OfferType {
    description String required
}

relationship OneToOne { Student{contactInformation required} to ContactInformation}
relationship OneToOne { Country to ContactInformation{country(name) required}}
relationship OneToMany { Country{provinces required} to Province{country(name)}}
relationship OneToMany { Entreprise{contactInformations required} to ContactInformation}
relationship OneToOne { Employee{contactInformation required} to ContactInformation}
relationship ManyToOne { Employee{entreprise(name)} to Entreprise{employees required}}
relationship OneToMany { Employee{offers required} to Offer{employee}}
relationship OneToOne { Teacher{contactInformation required} to ContactInformation}
relationship OneToMany { Teacher to Cohort{teacher}} /* ManyToMany? */
relationship OneToMany { Student to Cohort{student}} /* ManyToMany? */
relationship OneToMany { Offer to StudentOffer{offer}}
relationship OneToMany { Student to StudentOffer{student}}
relationship OneToMany { StudentOffer to Interview{studentOffer}}
relationship OneToMany { Interview to Internship{interview}}
relationship OneToMany { Internship{documents(name) required} to Document{internship}}
relationship OneToMany { DocumentType to Document{type(description)}}
relationship OneToMany { Technology to Offer{technologies}}
relationship OneToMany { OfferType to Offer{type(description)}}